% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/families.R
\name{families}
\alias{families}
\alias{xy_beta}
\alias{xy_binom}
\alias{xy_cauchy}
\alias{xy_chisq}
\alias{xy_exp}
\alias{xy_f}
\alias{xy_gamma}
\alias{xy_geometric}
\alias{xy_hypergeometric}
\alias{xy_logistic}
\alias{xy_lognormal}
\alias{xy_normal}
\alias{xy_poisson}
\alias{xy_signrank}
\alias{xy_t}
\alias{xy_uniform}
\alias{xy_weibull}
\alias{xy_wilcox}
\title{Family classes for a Xy simulation recipe}
\usage{
xy_beta(shape1 = 3, shape2 = 1, ncp = 0)

xy_binom(size = 2, prob = 0.1)

xy_cauchy(location = 0, scale = 1)

xy_chisq(df = 3, ncp = 0)

xy_exp(rate = 1)

xy_f(df1 = 1, df2 = 2, ncp = 0)

xy_gamma(shape = 1, rate = 2, scale = 1/rate)

xy_geometric(prob = 0.5)

xy_hypergeometric(m = 10, n = 7, k = 8)

xy_logistic(location = 0, scale = 1)

xy_lognormal(meanlog = 0, sdlog = 1)

xy_normal(mean = 0, sd = 3)

xy_poisson(lambda = 1)

xy_signrank(n = 5)

xy_t(df = 1, ncp = 0)

xy_uniform(min = 0, max = 1)

xy_weibull(shape = 1, scale = 1)

xy_wilcox(m = 4, n = 6)
}
\arguments{
\item{shape1}{a single non-negative parameter (see \code{\link{pbeta}})}

\item{shape2}{a single non-negative parameter (see \code{\link{pbeta}})}

\item{ncp}{a non-centrality parameter (e.g. see \code{\link{pbinom}})}

\item{size}{a single number of trials (see \code{\link{pbinom}})}

\item{prob}{a single probability (see \code{\link{pbinom}}, \code{\link{pgeom}})}

\item{location}{a single location parameter (see \code{\link{pcauchy}}, \code{\link{plogis}})}

\item{scale}{a single scale parameter (see \code{\link{pgamma}})}

\item{df}{a single integer specifying the degrees of freedom (see \code{\link{pchisq}}, \code{\link{pt}})}

\item{rate}{a single non-negative rate parameter (see \code{\link{pexp}}, \code{\link{pgamma}})}

\item{df1}{a single integer specifying the degrees of freedom (see \code{\link{pf}})}

\item{df2}{a single integer specifying the degrees of freedom (see \code{\link{pf}})}

\item{shape}{a single shape parameter (see \code{\link{pgamma}}, \code{\link{pweibull}})}

\item{m}{the number of observations in the first sample (see \code{\link{phyper}}, \code{\link{pwilcox}})}

\item{n}{the number of observations in the second sample (see \code{\link{phyper}}, \code{\link{pwilcox}}, \code{\link{psignrank}})}

\item{k}{the number of observations drawn from the sample (see \code{\link{phyper}})}

\item{meanlog}{a single numeric location parameter (see \code{\link{plnorm}})}

\item{sdlog}{a single numeric scale parameter (see \code{\link{plnorm}})}

\item{mean}{a single numeric location parameter (see \code{\link{pnorm}})}

\item{sd}{a single numeric scale parameter (see \code{\link{pnorm}})}

\item{lambda}{a single numeric value of means (see \code{\link{ppois}})}

\item{min}{a single numeric value specifying the lower bound (see \code{\link{punif}})}

\item{max}{a single numeric value specifying the upper bound (see \code{\link{punif}})}
}
\value{
a tibble with information on the distributional properties. This information
is only used internally forwarded to the copula simulation.
}
\description{
These gathered list of family objects let you alter the distributional family
of a simulated variable. They are invoked within the effect generating functions \code{\link{add_effects}}.
The families are using the stats functions corresponding to the distributional
family, i.e. for the normal distribution \code{\link{pnorm}}.
}
\examples{
# build a simulation recipe with linear features from the cauchy distribution
xy_recipe <- Xy(task = "regression") \%>\%
# add linear features with the desired distribution
add_linear(p = 5, family = xy_cauchy(location = 0, scale = 3))
# build a simulation recipe with squared nonlinear features from the normal distribution
xy_recipe <- Xy(task = "regression") \%>\%
# add nonlinear features with the desired distribution
add_nonlinear(p = 5, nlfun = function(x) x^2, 
              family = xy_normal(mean = 0, sd = 3))

}
